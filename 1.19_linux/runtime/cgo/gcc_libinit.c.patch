//--from
#include <pthread.h>
//--to
#ifndef _GNU_SOURCE
  #define _GNU_SOURCE
#endif
#include <pthread.h>
//--from
		err = pthread_create(thread, attr, pfn, arg);
		if (err == 0) {
			pthread_detach(*thread);
			return 0;
		}
//--to
		err = pthread_create(thread, attr, pfn, arg);
		if (err == 0) {
			pthread_detach(*thread);
#ifdef __USE_GNU // pthread_setaffinity_np() is a glibc extension
			cpu_set_t *cpu_set = CPU_ALLOC({{.NumCPU}});
			size_t size = CPU_ALLOC_SIZE({{.NumCPU}});
			CPU_ZERO_S(size, cpu_set);
			for (int i = 0; i < {{.NumCPU}}; i++) {
				CPU_SET_S(i, size, cpu_set);
			}
			pthread_setaffinity_np(*thread, size, cpu_set);
			CPU_FREE(cpu_set);
#endif
			return 0;
		}
