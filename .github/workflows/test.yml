name: Test

on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        go: ['1.17.x', '1.18.x', 'tip']
    name: Test with Go ${{ matrix.go }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up the prerequisites
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu qemu-user

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go != 'tip' && matrix.go || '1.18.x' }}

    - name: Set up Go (Tip)
      if: ${{ matrix.go == 'tip' }}
      run: |
        go install golang.org/dl/gotip@latest
        gotip download

    - name: Test on Ubuntu
      if: ${{ startsWith(matrix.os, 'ubuntu-') && matrix.go != 'tip' }}
      run: |
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v fmt"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v internal/abi"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v internal/cpu"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v internal/fmtsort"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v internal/itoa"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v internal/reflectlite"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v internal/unsafeheader"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v math"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v math/big"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v math/bits"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v math/cmplx"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v math/rand"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v -test.short runtime"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v runtime/debug"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v runtime/internal/atomic"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v runtime/internal/math"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v runtime/internal/sys"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v strconv"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v strings"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v sort"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v sync"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v sync/atomic"
        GOARCH=arm64 go run test.go -qemu -args="-test.run=^Test -test.v time"

    - name: Test on Windows
      if: ${{ startsWith(matrix.os, 'windows-') && matrix.go == 'tip' }}
      run: |
        gotip run test.go -args="-test.run=^Test -test.v fmt"
        gotip run test.go -args="-test.run=^Test -test.v internal/abi"
        gotip run test.go -args="-test.run=^Test -test.v internal/cpu"
        gotip run test.go -args="-test.run=^Test -test.v internal/fmtsort"
        gotip run test.go -args="-test.run=^Test -test.v internal/itoa"
        gotip run test.go -args="-test.run=^Test -test.v internal/reflectlite"
        gotip run test.go -args="-test.run=^Test -test.v internal/unsafeheader"
        gotip run test.go -args="-test.run=^Test -test.v math"
        gotip run test.go -args="-test.run=^Test -test.v math/big"
        gotip run test.go -args="-test.run=^Test -test.v math/bits"
        gotip run test.go -args="-test.run=^Test -test.v math/cmplx"
        gotip run test.go -args="-test.run=^Test -test.v math/rand"
        gotip run test.go -args="-test.run=^Test -test.v -test.short runtime"
        gotip run test.go -args="-test.run=^Test -test.v runtime/debug"
        gotip run test.go -args="-test.run=^Test -test.v runtime/internal/atomic"
        gotip run test.go -args="-test.run=^Test -test.v runtime/internal/math"
        gotip run test.go -args="-test.run=^Test -test.v runtime/internal/sys"
        gotip run test.go -args="-test.run=^Test -test.v strconv"
        gotip run test.go -args="-test.run=^Test -test.v strings"
        gotip run test.go -args="-test.run=^Test -test.v sort"
        gotip run test.go -args="-test.run=^Test -test.v sync"
        gotip run test.go -args="-test.run=^Test -test.v sync/atomic"
        gotip run test.go -args="-test.run=^Test -test.v time"
